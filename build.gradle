buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "gt"
            url = "https://gregtech.overminddl1.com/"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            url = "https://jitpack.io"
        }
    }
    dependencies {
        classpath 'com.github.GTNH2:ForgeGradle:FG_1.2-SNAPSHOT'
    }
}

apply plugin: 'scala'
apply plugin: 'forge'

//include "config.gradle"

//version = "1.0"
//group= "com.yourname.modid" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = jarName

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
}

sourceSets.main {
	compileClasspath += files("lib")
	scala.srcDirs "src/base", "src/mod"
	resources.srcDirs "src/resources"
}

processResources {
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version, 'modid':project.jarName
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

repositories {
	maven { url = "https://chickenbones.net/maven/" }
	maven { url = "https://files.projectredwiki.com/maven" }
}

dependencies {
    compile("mrtjp:ProjectRed:1.7.10-4.7.0pre12.95:dev") {
        exclude group: "tconstruct"
        exclude group: "cofh"
    }
    compile "codechicken:ForgeMultipart:1.7.10-1.2.0.347:dev"
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives deobfJar
    archives sourceJar
}

install.dependsOn reobf

idea {
    module {
        inheritOutputDirs = false
        outputDir = new File(compileJava.destinationDir.parentFile.parentFile, "idea")
        testOutputDir = new File(compileTestJava.destinationDir.parentFile.parentFile, "ideaTest")
    }
}
